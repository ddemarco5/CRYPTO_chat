#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = -lpthread

INC_RELEASE = $(INC) -Icryptlib -Intl-7.0.1/include
CFLAGS_RELEASE = $(CFLAGS) -O2 -std=c++11
RESINC_RELEASE = $(RESINC) -Icryptlib
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR) -Lcryptlib -Lntl-7.0.1/src
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS)
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/A3_assignment

OBJ_RELEASE = $(OBJDIR_RELEASE)/cryptlib/dh2.o $(OBJDIR_RELEASE)/cryptlib/emsa2.o $(OBJDIR_RELEASE)/cryptlib/elgamal.o $(OBJDIR_RELEASE)/cryptlib/ecp.o $(OBJDIR_RELEASE)/cryptlib/eccrypto.o $(OBJDIR_RELEASE)/cryptlib/ec2n.o $(OBJDIR_RELEASE)/cryptlib/eax.o $(OBJDIR_RELEASE)/cryptlib/dsa.o $(OBJDIR_RELEASE)/cryptlib/dlltest.o $(OBJDIR_RELEASE)/cryptlib/dll.o $(OBJDIR_RELEASE)/cryptlib/eprecomp.o $(OBJDIR_RELEASE)/cryptlib/dh.o $(OBJDIR_RELEASE)/cryptlib/dessp.o $(OBJDIR_RELEASE)/cryptlib/des.o $(OBJDIR_RELEASE)/cryptlib/default.o $(OBJDIR_RELEASE)/cryptlib/cryptlib_bds.o $(OBJDIR_RELEASE)/cryptlib/cryptlib.o $(OBJDIR_RELEASE)/cryptlib/crc.o $(OBJDIR_RELEASE)/cryptlib/cpu.o $(OBJDIR_RELEASE)/cryptlib/gf2_32.o $(OBJDIR_RELEASE)/cryptlib/ida.o $(OBJDIR_RELEASE)/cryptlib/hrtimer.o $(OBJDIR_RELEASE)/cryptlib/hmac.o $(OBJDIR_RELEASE)/cryptlib/hex.o $(OBJDIR_RELEASE)/cryptlib/gzip.o $(OBJDIR_RELEASE)/cryptlib/gost.o $(OBJDIR_RELEASE)/cryptlib/gfpcrypt.o $(OBJDIR_RELEASE)/cryptlib/gf2n.o $(OBJDIR_RELEASE)/cryptlib/cmac.o $(OBJDIR_RELEASE)/cryptlib/gf256.o $(OBJDIR_RELEASE)/cryptlib/gcm.o $(OBJDIR_RELEASE)/cryptlib/fipstest.o $(OBJDIR_RELEASE)/cryptlib/fipsalgt.o $(OBJDIR_RELEASE)/cryptlib/fips140.o $(OBJDIR_RELEASE)/cryptlib/filters.o $(OBJDIR_RELEASE)/cryptlib/files.o $(OBJDIR_RELEASE)/cryptlib/esign.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ.o $(OBJDIR_RELEASE)/cryptlib/3way.o $(OBJDIR_RELEASE)/PracticalSocket.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/xdouble.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_lzz_pE.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_lzz_p.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ_pE.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ_p.o $(OBJDIR_RELEASE)/cryptlib/adler32.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_RR.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_GF2E.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_GF2.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/tools.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/quad_float.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_lzz_p.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_ZZ_p.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_ZZ.o $(OBJDIR_RELEASE)/cryptlib/bfinit.o $(OBJDIR_RELEASE)/cryptlib/channels.o $(OBJDIR_RELEASE)/cryptlib/ccm.o $(OBJDIR_RELEASE)/cryptlib/cbcmac.o $(OBJDIR_RELEASE)/cryptlib/casts.o $(OBJDIR_RELEASE)/cryptlib/cast.o $(OBJDIR_RELEASE)/cryptlib/camellia.o $(OBJDIR_RELEASE)/cryptlib/blumshub.o $(OBJDIR_RELEASE)/cryptlib/blowfish.o $(OBJDIR_RELEASE)/cryptlib/idea.o $(OBJDIR_RELEASE)/cryptlib/basecode.o $(OBJDIR_RELEASE)/cryptlib/base64.o $(OBJDIR_RELEASE)/cryptlib/base32.o $(OBJDIR_RELEASE)/cryptlib/authenc.o $(OBJDIR_RELEASE)/cryptlib/asn.o $(OBJDIR_RELEASE)/cryptlib/arc4.o $(OBJDIR_RELEASE)/cryptlib/algparam.o $(OBJDIR_RELEASE)/cryptlib/algebra.o $(OBJDIR_RELEASE)/cryptlib/sharkbox.o $(OBJDIR_RELEASE)/cryptlib/tftables.o $(OBJDIR_RELEASE)/cryptlib/tea.o $(OBJDIR_RELEASE)/cryptlib/strciphr.o $(OBJDIR_RELEASE)/cryptlib/squaretb.o $(OBJDIR_RELEASE)/cryptlib/square.o $(OBJDIR_RELEASE)/cryptlib/sosemanuk.o $(OBJDIR_RELEASE)/cryptlib/socketft.o $(OBJDIR_RELEASE)/cryptlib/skipjack.o $(OBJDIR_RELEASE)/cryptlib/simple.o $(OBJDIR_RELEASE)/cryptlib/tiger.o $(OBJDIR_RELEASE)/cryptlib/shark.o $(OBJDIR_RELEASE)/cryptlib/shacal2.o $(OBJDIR_RELEASE)/cryptlib/sha3.o $(OBJDIR_RELEASE)/cryptlib/sha.o $(OBJDIR_RELEASE)/cryptlib/serpent.o $(OBJDIR_RELEASE)/cryptlib/seed.o $(OBJDIR_RELEASE)/cryptlib/seal.o $(OBJDIR_RELEASE)/cryptlib/salsa.o $(OBJDIR_RELEASE)/cryptlib/winpipes.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/encryption.o $(OBJDIR_RELEASE)/cryptlib/zlib.o $(OBJDIR_RELEASE)/cryptlib/zinflate.o $(OBJDIR_RELEASE)/cryptlib/zdeflate.o $(OBJDIR_RELEASE)/cryptlib/xtrcrypt.o $(OBJDIR_RELEASE)/cryptlib/xtr.o $(OBJDIR_RELEASE)/cryptlib/safer.o $(OBJDIR_RELEASE)/cryptlib/whrlpool.o $(OBJDIR_RELEASE)/cryptlib/wake.o $(OBJDIR_RELEASE)/cryptlib/wait.o $(OBJDIR_RELEASE)/cryptlib/vmac.o $(OBJDIR_RELEASE)/cryptlib/twofish.o $(OBJDIR_RELEASE)/cryptlib/ttmac.o $(OBJDIR_RELEASE)/cryptlib/trdlocal.o $(OBJDIR_RELEASE)/cryptlib/tigertab.o $(OBJDIR_RELEASE)/cryptlib/misc.o $(OBJDIR_RELEASE)/cryptlib/panama.o $(OBJDIR_RELEASE)/cryptlib/osrng.o $(OBJDIR_RELEASE)/cryptlib/oaep.o $(OBJDIR_RELEASE)/cryptlib/network.o $(OBJDIR_RELEASE)/cryptlib/nbtheory.o $(OBJDIR_RELEASE)/cryptlib/mqv.o $(OBJDIR_RELEASE)/cryptlib/mqueue.o $(OBJDIR_RELEASE)/cryptlib/modes.o $(OBJDIR_RELEASE)/cryptlib/pch.o $(OBJDIR_RELEASE)/cryptlib/md5.o $(OBJDIR_RELEASE)/cryptlib/md4.o $(OBJDIR_RELEASE)/cryptlib/md2.o $(OBJDIR_RELEASE)/cryptlib/marss.o $(OBJDIR_RELEASE)/cryptlib/mars.o $(OBJDIR_RELEASE)/cryptlib/luc.o $(OBJDIR_RELEASE)/cryptlib/iterhash.o $(OBJDIR_RELEASE)/cryptlib/integer.o $(OBJDIR_RELEASE)/cryptlib/rc5.o $(OBJDIR_RELEASE)/cryptlib/rw.o $(OBJDIR_RELEASE)/cryptlib/rsa.o $(OBJDIR_RELEASE)/cryptlib/rng.o $(OBJDIR_RELEASE)/cryptlib/ripemd.o $(OBJDIR_RELEASE)/cryptlib/rijndael.o $(OBJDIR_RELEASE)/cryptlib/regtest.o $(OBJDIR_RELEASE)/cryptlib/rdtables.o $(OBJDIR_RELEASE)/cryptlib/rc6.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_lzz_pE.o $(OBJDIR_RELEASE)/cryptlib/rc2.o $(OBJDIR_RELEASE)/cryptlib/randpool.o $(OBJDIR_RELEASE)/cryptlib/rabin.o $(OBJDIR_RELEASE)/cryptlib/queue.o $(OBJDIR_RELEASE)/cryptlib/pubkey.o $(OBJDIR_RELEASE)/cryptlib/pssr.o $(OBJDIR_RELEASE)/cryptlib/polynomi.o $(OBJDIR_RELEASE)/cryptlib/pkcspad.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_p.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ctools.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pXFactoring.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pXCharPoly.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pX1.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pX.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pEXFactoring.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pEX.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pE.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/fileio.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZXFactoring.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZXCharPoly.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZX1.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZX.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZVec.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/WordVector.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/RR.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pXCharPoly.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_lzz_p.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ_pE.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ_p.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_RR.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_GF2E.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_GF2.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pXFactoring.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_XD.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pX1.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pX.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pEXFactoring.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pEX.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pE.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_p.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lip.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/FacVec.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/FFT.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_QP.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_RR.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_QP.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_FP.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/HNF.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GetTime.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_XD.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_RR.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_FP.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2XVec.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2XFactoring.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2X1.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2X.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2EXFactoring.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2EX.o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2E.o

all: release

clean: clean_release

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE)/cryptlib || mkdir -p $(OBJDIR_RELEASE)/cryptlib
	test -d $(OBJDIR_RELEASE)/ntl-7.0.1/src || mkdir -p $(OBJDIR_RELEASE)/ntl-7.0.1/src
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/cryptlib/dh2.o: cryptlib/dh2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/dh2.cpp -o $(OBJDIR_RELEASE)/cryptlib/dh2.o

$(OBJDIR_RELEASE)/cryptlib/emsa2.o: cryptlib/emsa2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/emsa2.cpp -o $(OBJDIR_RELEASE)/cryptlib/emsa2.o

$(OBJDIR_RELEASE)/cryptlib/elgamal.o: cryptlib/elgamal.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/elgamal.cpp -o $(OBJDIR_RELEASE)/cryptlib/elgamal.o

$(OBJDIR_RELEASE)/cryptlib/ecp.o: cryptlib/ecp.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/ecp.cpp -o $(OBJDIR_RELEASE)/cryptlib/ecp.o

$(OBJDIR_RELEASE)/cryptlib/eccrypto.o: cryptlib/eccrypto.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/eccrypto.cpp -o $(OBJDIR_RELEASE)/cryptlib/eccrypto.o

$(OBJDIR_RELEASE)/cryptlib/ec2n.o: cryptlib/ec2n.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/ec2n.cpp -o $(OBJDIR_RELEASE)/cryptlib/ec2n.o

$(OBJDIR_RELEASE)/cryptlib/eax.o: cryptlib/eax.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/eax.cpp -o $(OBJDIR_RELEASE)/cryptlib/eax.o

$(OBJDIR_RELEASE)/cryptlib/dsa.o: cryptlib/dsa.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/dsa.cpp -o $(OBJDIR_RELEASE)/cryptlib/dsa.o

$(OBJDIR_RELEASE)/cryptlib/dlltest.o: cryptlib/dlltest.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/dlltest.cpp -o $(OBJDIR_RELEASE)/cryptlib/dlltest.o

$(OBJDIR_RELEASE)/cryptlib/dll.o: cryptlib/dll.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/dll.cpp -o $(OBJDIR_RELEASE)/cryptlib/dll.o

$(OBJDIR_RELEASE)/cryptlib/eprecomp.o: cryptlib/eprecomp.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/eprecomp.cpp -o $(OBJDIR_RELEASE)/cryptlib/eprecomp.o

$(OBJDIR_RELEASE)/cryptlib/dh.o: cryptlib/dh.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/dh.cpp -o $(OBJDIR_RELEASE)/cryptlib/dh.o

$(OBJDIR_RELEASE)/cryptlib/dessp.o: cryptlib/dessp.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/dessp.cpp -o $(OBJDIR_RELEASE)/cryptlib/dessp.o

$(OBJDIR_RELEASE)/cryptlib/des.o: cryptlib/des.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/des.cpp -o $(OBJDIR_RELEASE)/cryptlib/des.o

$(OBJDIR_RELEASE)/cryptlib/default.o: cryptlib/default.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/default.cpp -o $(OBJDIR_RELEASE)/cryptlib/default.o

$(OBJDIR_RELEASE)/cryptlib/cryptlib_bds.o: cryptlib/cryptlib_bds.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/cryptlib_bds.cpp -o $(OBJDIR_RELEASE)/cryptlib/cryptlib_bds.o

$(OBJDIR_RELEASE)/cryptlib/cryptlib.o: cryptlib/cryptlib.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/cryptlib.cpp -o $(OBJDIR_RELEASE)/cryptlib/cryptlib.o

$(OBJDIR_RELEASE)/cryptlib/crc.o: cryptlib/crc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/crc.cpp -o $(OBJDIR_RELEASE)/cryptlib/crc.o

$(OBJDIR_RELEASE)/cryptlib/cpu.o: cryptlib/cpu.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/cpu.cpp -o $(OBJDIR_RELEASE)/cryptlib/cpu.o

$(OBJDIR_RELEASE)/cryptlib/gf2_32.o: cryptlib/gf2_32.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/gf2_32.cpp -o $(OBJDIR_RELEASE)/cryptlib/gf2_32.o

$(OBJDIR_RELEASE)/cryptlib/ida.o: cryptlib/ida.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/ida.cpp -o $(OBJDIR_RELEASE)/cryptlib/ida.o

$(OBJDIR_RELEASE)/cryptlib/hrtimer.o: cryptlib/hrtimer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/hrtimer.cpp -o $(OBJDIR_RELEASE)/cryptlib/hrtimer.o

$(OBJDIR_RELEASE)/cryptlib/hmac.o: cryptlib/hmac.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/hmac.cpp -o $(OBJDIR_RELEASE)/cryptlib/hmac.o

$(OBJDIR_RELEASE)/cryptlib/hex.o: cryptlib/hex.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/hex.cpp -o $(OBJDIR_RELEASE)/cryptlib/hex.o

$(OBJDIR_RELEASE)/cryptlib/gzip.o: cryptlib/gzip.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/gzip.cpp -o $(OBJDIR_RELEASE)/cryptlib/gzip.o

$(OBJDIR_RELEASE)/cryptlib/gost.o: cryptlib/gost.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/gost.cpp -o $(OBJDIR_RELEASE)/cryptlib/gost.o

$(OBJDIR_RELEASE)/cryptlib/gfpcrypt.o: cryptlib/gfpcrypt.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/gfpcrypt.cpp -o $(OBJDIR_RELEASE)/cryptlib/gfpcrypt.o

$(OBJDIR_RELEASE)/cryptlib/gf2n.o: cryptlib/gf2n.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/gf2n.cpp -o $(OBJDIR_RELEASE)/cryptlib/gf2n.o

$(OBJDIR_RELEASE)/cryptlib/cmac.o: cryptlib/cmac.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/cmac.cpp -o $(OBJDIR_RELEASE)/cryptlib/cmac.o

$(OBJDIR_RELEASE)/cryptlib/gf256.o: cryptlib/gf256.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/gf256.cpp -o $(OBJDIR_RELEASE)/cryptlib/gf256.o

$(OBJDIR_RELEASE)/cryptlib/gcm.o: cryptlib/gcm.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/gcm.cpp -o $(OBJDIR_RELEASE)/cryptlib/gcm.o

$(OBJDIR_RELEASE)/cryptlib/fipstest.o: cryptlib/fipstest.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/fipstest.cpp -o $(OBJDIR_RELEASE)/cryptlib/fipstest.o

$(OBJDIR_RELEASE)/cryptlib/fipsalgt.o: cryptlib/fipsalgt.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/fipsalgt.cpp -o $(OBJDIR_RELEASE)/cryptlib/fipsalgt.o

$(OBJDIR_RELEASE)/cryptlib/fips140.o: cryptlib/fips140.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/fips140.cpp -o $(OBJDIR_RELEASE)/cryptlib/fips140.o

$(OBJDIR_RELEASE)/cryptlib/filters.o: cryptlib/filters.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/filters.cpp -o $(OBJDIR_RELEASE)/cryptlib/filters.o

$(OBJDIR_RELEASE)/cryptlib/files.o: cryptlib/files.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/files.cpp -o $(OBJDIR_RELEASE)/cryptlib/files.o

$(OBJDIR_RELEASE)/cryptlib/esign.o: cryptlib/esign.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/esign.cpp -o $(OBJDIR_RELEASE)/cryptlib/esign.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ.o: ntl-7.0.1/src/vec_ZZ.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/vec_ZZ.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ.o

$(OBJDIR_RELEASE)/cryptlib/3way.o: cryptlib/3way.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/3way.cpp -o $(OBJDIR_RELEASE)/cryptlib/3way.o

$(OBJDIR_RELEASE)/PracticalSocket.o: PracticalSocket.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c PracticalSocket.cpp -o $(OBJDIR_RELEASE)/PracticalSocket.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/xdouble.o: ntl-7.0.1/src/xdouble.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/xdouble.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/xdouble.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_lzz_pE.o: ntl-7.0.1/src/vec_lzz_pE.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/vec_lzz_pE.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_lzz_pE.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_lzz_p.o: ntl-7.0.1/src/vec_lzz_p.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/vec_lzz_p.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_lzz_p.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ_pE.o: ntl-7.0.1/src/vec_ZZ_pE.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/vec_ZZ_pE.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ_pE.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ_p.o: ntl-7.0.1/src/vec_ZZ_p.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/vec_ZZ_p.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_ZZ_p.o

$(OBJDIR_RELEASE)/cryptlib/adler32.o: cryptlib/adler32.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/adler32.cpp -o $(OBJDIR_RELEASE)/cryptlib/adler32.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_RR.o: ntl-7.0.1/src/vec_RR.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/vec_RR.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_RR.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_GF2E.o: ntl-7.0.1/src/vec_GF2E.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/vec_GF2E.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_GF2E.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_GF2.o: ntl-7.0.1/src/vec_GF2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/vec_GF2.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/vec_GF2.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/tools.o: ntl-7.0.1/src/tools.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/tools.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/tools.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/quad_float.o: ntl-7.0.1/src/quad_float.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/quad_float.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/quad_float.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_lzz_p.o: ntl-7.0.1/src/mat_poly_lzz_p.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_poly_lzz_p.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_lzz_p.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_ZZ_p.o: ntl-7.0.1/src/mat_poly_ZZ_p.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_poly_ZZ_p.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_ZZ_p.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_ZZ.o: ntl-7.0.1/src/mat_poly_ZZ.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_poly_ZZ.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_poly_ZZ.o

$(OBJDIR_RELEASE)/cryptlib/bfinit.o: cryptlib/bfinit.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/bfinit.cpp -o $(OBJDIR_RELEASE)/cryptlib/bfinit.o

$(OBJDIR_RELEASE)/cryptlib/channels.o: cryptlib/channels.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/channels.cpp -o $(OBJDIR_RELEASE)/cryptlib/channels.o

$(OBJDIR_RELEASE)/cryptlib/ccm.o: cryptlib/ccm.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/ccm.cpp -o $(OBJDIR_RELEASE)/cryptlib/ccm.o

$(OBJDIR_RELEASE)/cryptlib/cbcmac.o: cryptlib/cbcmac.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/cbcmac.cpp -o $(OBJDIR_RELEASE)/cryptlib/cbcmac.o

$(OBJDIR_RELEASE)/cryptlib/casts.o: cryptlib/casts.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/casts.cpp -o $(OBJDIR_RELEASE)/cryptlib/casts.o

$(OBJDIR_RELEASE)/cryptlib/cast.o: cryptlib/cast.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/cast.cpp -o $(OBJDIR_RELEASE)/cryptlib/cast.o

$(OBJDIR_RELEASE)/cryptlib/camellia.o: cryptlib/camellia.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/camellia.cpp -o $(OBJDIR_RELEASE)/cryptlib/camellia.o

$(OBJDIR_RELEASE)/cryptlib/blumshub.o: cryptlib/blumshub.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/blumshub.cpp -o $(OBJDIR_RELEASE)/cryptlib/blumshub.o

$(OBJDIR_RELEASE)/cryptlib/blowfish.o: cryptlib/blowfish.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/blowfish.cpp -o $(OBJDIR_RELEASE)/cryptlib/blowfish.o

$(OBJDIR_RELEASE)/cryptlib/idea.o: cryptlib/idea.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/idea.cpp -o $(OBJDIR_RELEASE)/cryptlib/idea.o

$(OBJDIR_RELEASE)/cryptlib/basecode.o: cryptlib/basecode.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/basecode.cpp -o $(OBJDIR_RELEASE)/cryptlib/basecode.o

$(OBJDIR_RELEASE)/cryptlib/base64.o: cryptlib/base64.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/base64.cpp -o $(OBJDIR_RELEASE)/cryptlib/base64.o

$(OBJDIR_RELEASE)/cryptlib/base32.o: cryptlib/base32.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/base32.cpp -o $(OBJDIR_RELEASE)/cryptlib/base32.o

$(OBJDIR_RELEASE)/cryptlib/authenc.o: cryptlib/authenc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/authenc.cpp -o $(OBJDIR_RELEASE)/cryptlib/authenc.o

$(OBJDIR_RELEASE)/cryptlib/asn.o: cryptlib/asn.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/asn.cpp -o $(OBJDIR_RELEASE)/cryptlib/asn.o

$(OBJDIR_RELEASE)/cryptlib/arc4.o: cryptlib/arc4.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/arc4.cpp -o $(OBJDIR_RELEASE)/cryptlib/arc4.o

$(OBJDIR_RELEASE)/cryptlib/algparam.o: cryptlib/algparam.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/algparam.cpp -o $(OBJDIR_RELEASE)/cryptlib/algparam.o

$(OBJDIR_RELEASE)/cryptlib/algebra.o: cryptlib/algebra.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/algebra.cpp -o $(OBJDIR_RELEASE)/cryptlib/algebra.o

$(OBJDIR_RELEASE)/cryptlib/sharkbox.o: cryptlib/sharkbox.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/sharkbox.cpp -o $(OBJDIR_RELEASE)/cryptlib/sharkbox.o

$(OBJDIR_RELEASE)/cryptlib/tftables.o: cryptlib/tftables.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/tftables.cpp -o $(OBJDIR_RELEASE)/cryptlib/tftables.o

$(OBJDIR_RELEASE)/cryptlib/tea.o: cryptlib/tea.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/tea.cpp -o $(OBJDIR_RELEASE)/cryptlib/tea.o

$(OBJDIR_RELEASE)/cryptlib/strciphr.o: cryptlib/strciphr.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/strciphr.cpp -o $(OBJDIR_RELEASE)/cryptlib/strciphr.o

$(OBJDIR_RELEASE)/cryptlib/squaretb.o: cryptlib/squaretb.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/squaretb.cpp -o $(OBJDIR_RELEASE)/cryptlib/squaretb.o

$(OBJDIR_RELEASE)/cryptlib/square.o: cryptlib/square.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/square.cpp -o $(OBJDIR_RELEASE)/cryptlib/square.o

$(OBJDIR_RELEASE)/cryptlib/sosemanuk.o: cryptlib/sosemanuk.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/sosemanuk.cpp -o $(OBJDIR_RELEASE)/cryptlib/sosemanuk.o

$(OBJDIR_RELEASE)/cryptlib/socketft.o: cryptlib/socketft.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/socketft.cpp -o $(OBJDIR_RELEASE)/cryptlib/socketft.o

$(OBJDIR_RELEASE)/cryptlib/skipjack.o: cryptlib/skipjack.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/skipjack.cpp -o $(OBJDIR_RELEASE)/cryptlib/skipjack.o

$(OBJDIR_RELEASE)/cryptlib/simple.o: cryptlib/simple.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/simple.cpp -o $(OBJDIR_RELEASE)/cryptlib/simple.o

$(OBJDIR_RELEASE)/cryptlib/tiger.o: cryptlib/tiger.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/tiger.cpp -o $(OBJDIR_RELEASE)/cryptlib/tiger.o

$(OBJDIR_RELEASE)/cryptlib/shark.o: cryptlib/shark.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/shark.cpp -o $(OBJDIR_RELEASE)/cryptlib/shark.o

$(OBJDIR_RELEASE)/cryptlib/shacal2.o: cryptlib/shacal2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/shacal2.cpp -o $(OBJDIR_RELEASE)/cryptlib/shacal2.o

$(OBJDIR_RELEASE)/cryptlib/sha3.o: cryptlib/sha3.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/sha3.cpp -o $(OBJDIR_RELEASE)/cryptlib/sha3.o

$(OBJDIR_RELEASE)/cryptlib/sha.o: cryptlib/sha.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/sha.cpp -o $(OBJDIR_RELEASE)/cryptlib/sha.o

$(OBJDIR_RELEASE)/cryptlib/serpent.o: cryptlib/serpent.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/serpent.cpp -o $(OBJDIR_RELEASE)/cryptlib/serpent.o

$(OBJDIR_RELEASE)/cryptlib/seed.o: cryptlib/seed.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/seed.cpp -o $(OBJDIR_RELEASE)/cryptlib/seed.o

$(OBJDIR_RELEASE)/cryptlib/seal.o: cryptlib/seal.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/seal.cpp -o $(OBJDIR_RELEASE)/cryptlib/seal.o

$(OBJDIR_RELEASE)/cryptlib/salsa.o: cryptlib/salsa.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/salsa.cpp -o $(OBJDIR_RELEASE)/cryptlib/salsa.o

$(OBJDIR_RELEASE)/cryptlib/winpipes.o: cryptlib/winpipes.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/winpipes.cpp -o $(OBJDIR_RELEASE)/cryptlib/winpipes.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/encryption.o: encryption.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c encryption.cpp -o $(OBJDIR_RELEASE)/encryption.o

$(OBJDIR_RELEASE)/cryptlib/zlib.o: cryptlib/zlib.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/zlib.cpp -o $(OBJDIR_RELEASE)/cryptlib/zlib.o

$(OBJDIR_RELEASE)/cryptlib/zinflate.o: cryptlib/zinflate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/zinflate.cpp -o $(OBJDIR_RELEASE)/cryptlib/zinflate.o

$(OBJDIR_RELEASE)/cryptlib/zdeflate.o: cryptlib/zdeflate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/zdeflate.cpp -o $(OBJDIR_RELEASE)/cryptlib/zdeflate.o

$(OBJDIR_RELEASE)/cryptlib/xtrcrypt.o: cryptlib/xtrcrypt.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/xtrcrypt.cpp -o $(OBJDIR_RELEASE)/cryptlib/xtrcrypt.o

$(OBJDIR_RELEASE)/cryptlib/xtr.o: cryptlib/xtr.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/xtr.cpp -o $(OBJDIR_RELEASE)/cryptlib/xtr.o

$(OBJDIR_RELEASE)/cryptlib/safer.o: cryptlib/safer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/safer.cpp -o $(OBJDIR_RELEASE)/cryptlib/safer.o

$(OBJDIR_RELEASE)/cryptlib/whrlpool.o: cryptlib/whrlpool.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/whrlpool.cpp -o $(OBJDIR_RELEASE)/cryptlib/whrlpool.o

$(OBJDIR_RELEASE)/cryptlib/wake.o: cryptlib/wake.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/wake.cpp -o $(OBJDIR_RELEASE)/cryptlib/wake.o

$(OBJDIR_RELEASE)/cryptlib/wait.o: cryptlib/wait.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/wait.cpp -o $(OBJDIR_RELEASE)/cryptlib/wait.o

$(OBJDIR_RELEASE)/cryptlib/vmac.o: cryptlib/vmac.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/vmac.cpp -o $(OBJDIR_RELEASE)/cryptlib/vmac.o

$(OBJDIR_RELEASE)/cryptlib/twofish.o: cryptlib/twofish.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/twofish.cpp -o $(OBJDIR_RELEASE)/cryptlib/twofish.o

$(OBJDIR_RELEASE)/cryptlib/ttmac.o: cryptlib/ttmac.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/ttmac.cpp -o $(OBJDIR_RELEASE)/cryptlib/ttmac.o

$(OBJDIR_RELEASE)/cryptlib/trdlocal.o: cryptlib/trdlocal.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/trdlocal.cpp -o $(OBJDIR_RELEASE)/cryptlib/trdlocal.o

$(OBJDIR_RELEASE)/cryptlib/tigertab.o: cryptlib/tigertab.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/tigertab.cpp -o $(OBJDIR_RELEASE)/cryptlib/tigertab.o

$(OBJDIR_RELEASE)/cryptlib/misc.o: cryptlib/misc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/misc.cpp -o $(OBJDIR_RELEASE)/cryptlib/misc.o

$(OBJDIR_RELEASE)/cryptlib/panama.o: cryptlib/panama.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/panama.cpp -o $(OBJDIR_RELEASE)/cryptlib/panama.o

$(OBJDIR_RELEASE)/cryptlib/osrng.o: cryptlib/osrng.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/osrng.cpp -o $(OBJDIR_RELEASE)/cryptlib/osrng.o

$(OBJDIR_RELEASE)/cryptlib/oaep.o: cryptlib/oaep.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/oaep.cpp -o $(OBJDIR_RELEASE)/cryptlib/oaep.o

$(OBJDIR_RELEASE)/cryptlib/network.o: cryptlib/network.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/network.cpp -o $(OBJDIR_RELEASE)/cryptlib/network.o

$(OBJDIR_RELEASE)/cryptlib/nbtheory.o: cryptlib/nbtheory.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/nbtheory.cpp -o $(OBJDIR_RELEASE)/cryptlib/nbtheory.o

$(OBJDIR_RELEASE)/cryptlib/mqv.o: cryptlib/mqv.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/mqv.cpp -o $(OBJDIR_RELEASE)/cryptlib/mqv.o

$(OBJDIR_RELEASE)/cryptlib/mqueue.o: cryptlib/mqueue.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/mqueue.cpp -o $(OBJDIR_RELEASE)/cryptlib/mqueue.o

$(OBJDIR_RELEASE)/cryptlib/modes.o: cryptlib/modes.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/modes.cpp -o $(OBJDIR_RELEASE)/cryptlib/modes.o

$(OBJDIR_RELEASE)/cryptlib/pch.o: cryptlib/pch.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/pch.cpp -o $(OBJDIR_RELEASE)/cryptlib/pch.o

$(OBJDIR_RELEASE)/cryptlib/md5.o: cryptlib/md5.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/md5.cpp -o $(OBJDIR_RELEASE)/cryptlib/md5.o

$(OBJDIR_RELEASE)/cryptlib/md4.o: cryptlib/md4.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/md4.cpp -o $(OBJDIR_RELEASE)/cryptlib/md4.o

$(OBJDIR_RELEASE)/cryptlib/md2.o: cryptlib/md2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/md2.cpp -o $(OBJDIR_RELEASE)/cryptlib/md2.o

$(OBJDIR_RELEASE)/cryptlib/marss.o: cryptlib/marss.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/marss.cpp -o $(OBJDIR_RELEASE)/cryptlib/marss.o

$(OBJDIR_RELEASE)/cryptlib/mars.o: cryptlib/mars.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/mars.cpp -o $(OBJDIR_RELEASE)/cryptlib/mars.o

$(OBJDIR_RELEASE)/cryptlib/luc.o: cryptlib/luc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/luc.cpp -o $(OBJDIR_RELEASE)/cryptlib/luc.o

$(OBJDIR_RELEASE)/cryptlib/iterhash.o: cryptlib/iterhash.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/iterhash.cpp -o $(OBJDIR_RELEASE)/cryptlib/iterhash.o

$(OBJDIR_RELEASE)/cryptlib/integer.o: cryptlib/integer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/integer.cpp -o $(OBJDIR_RELEASE)/cryptlib/integer.o

$(OBJDIR_RELEASE)/cryptlib/rc5.o: cryptlib/rc5.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rc5.cpp -o $(OBJDIR_RELEASE)/cryptlib/rc5.o

$(OBJDIR_RELEASE)/cryptlib/rw.o: cryptlib/rw.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rw.cpp -o $(OBJDIR_RELEASE)/cryptlib/rw.o

$(OBJDIR_RELEASE)/cryptlib/rsa.o: cryptlib/rsa.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rsa.cpp -o $(OBJDIR_RELEASE)/cryptlib/rsa.o

$(OBJDIR_RELEASE)/cryptlib/rng.o: cryptlib/rng.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rng.cpp -o $(OBJDIR_RELEASE)/cryptlib/rng.o

$(OBJDIR_RELEASE)/cryptlib/ripemd.o: cryptlib/ripemd.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/ripemd.cpp -o $(OBJDIR_RELEASE)/cryptlib/ripemd.o

$(OBJDIR_RELEASE)/cryptlib/rijndael.o: cryptlib/rijndael.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rijndael.cpp -o $(OBJDIR_RELEASE)/cryptlib/rijndael.o

$(OBJDIR_RELEASE)/cryptlib/regtest.o: cryptlib/regtest.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/regtest.cpp -o $(OBJDIR_RELEASE)/cryptlib/regtest.o

$(OBJDIR_RELEASE)/cryptlib/rdtables.o: cryptlib/rdtables.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rdtables.cpp -o $(OBJDIR_RELEASE)/cryptlib/rdtables.o

$(OBJDIR_RELEASE)/cryptlib/rc6.o: cryptlib/rc6.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rc6.cpp -o $(OBJDIR_RELEASE)/cryptlib/rc6.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_lzz_pE.o: ntl-7.0.1/src/mat_lzz_pE.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_lzz_pE.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_lzz_pE.o

$(OBJDIR_RELEASE)/cryptlib/rc2.o: cryptlib/rc2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rc2.cpp -o $(OBJDIR_RELEASE)/cryptlib/rc2.o

$(OBJDIR_RELEASE)/cryptlib/randpool.o: cryptlib/randpool.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/randpool.cpp -o $(OBJDIR_RELEASE)/cryptlib/randpool.o

$(OBJDIR_RELEASE)/cryptlib/rabin.o: cryptlib/rabin.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/rabin.cpp -o $(OBJDIR_RELEASE)/cryptlib/rabin.o

$(OBJDIR_RELEASE)/cryptlib/queue.o: cryptlib/queue.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/queue.cpp -o $(OBJDIR_RELEASE)/cryptlib/queue.o

$(OBJDIR_RELEASE)/cryptlib/pubkey.o: cryptlib/pubkey.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/pubkey.cpp -o $(OBJDIR_RELEASE)/cryptlib/pubkey.o

$(OBJDIR_RELEASE)/cryptlib/pssr.o: cryptlib/pssr.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/pssr.cpp -o $(OBJDIR_RELEASE)/cryptlib/pssr.o

$(OBJDIR_RELEASE)/cryptlib/polynomi.o: cryptlib/polynomi.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/polynomi.cpp -o $(OBJDIR_RELEASE)/cryptlib/polynomi.o

$(OBJDIR_RELEASE)/cryptlib/pkcspad.o: cryptlib/pkcspad.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cryptlib/pkcspad.cpp -o $(OBJDIR_RELEASE)/cryptlib/pkcspad.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_p.o: ntl-7.0.1/src/ZZ_p.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ_p.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_p.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ctools.o: ntl-7.0.1/src/ctools.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ctools.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ctools.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pXFactoring.o: ntl-7.0.1/src/ZZ_pXFactoring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ_pXFactoring.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pXFactoring.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pXCharPoly.o: ntl-7.0.1/src/ZZ_pXCharPoly.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ_pXCharPoly.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pXCharPoly.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pX1.o: ntl-7.0.1/src/ZZ_pX1.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ_pX1.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pX1.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pX.o: ntl-7.0.1/src/ZZ_pX.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ_pX.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pX.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pEXFactoring.o: ntl-7.0.1/src/ZZ_pEXFactoring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ_pEXFactoring.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pEXFactoring.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pEX.o: ntl-7.0.1/src/ZZ_pEX.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ_pEX.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pEX.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pE.o: ntl-7.0.1/src/ZZ_pE.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ_pE.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ_pE.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/fileio.o: ntl-7.0.1/src/fileio.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/fileio.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/fileio.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZXFactoring.o: ntl-7.0.1/src/ZZXFactoring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZXFactoring.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZXFactoring.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZXCharPoly.o: ntl-7.0.1/src/ZZXCharPoly.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZXCharPoly.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZXCharPoly.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZX1.o: ntl-7.0.1/src/ZZX1.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZX1.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZX1.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZX.o: ntl-7.0.1/src/ZZX.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZX.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZX.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZVec.o: ntl-7.0.1/src/ZZVec.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZVec.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZVec.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ.o: ntl-7.0.1/src/ZZ.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/ZZ.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/ZZ.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/WordVector.o: ntl-7.0.1/src/WordVector.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/WordVector.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/WordVector.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/RR.o: ntl-7.0.1/src/RR.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/RR.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/RR.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pXCharPoly.o: ntl-7.0.1/src/lzz_pXCharPoly.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lzz_pXCharPoly.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pXCharPoly.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_lzz_p.o: ntl-7.0.1/src/mat_lzz_p.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_lzz_p.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_lzz_p.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ_pE.o: ntl-7.0.1/src/mat_ZZ_pE.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_ZZ_pE.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ_pE.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ_p.o: ntl-7.0.1/src/mat_ZZ_p.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_ZZ_p.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ_p.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ.o: ntl-7.0.1/src/mat_ZZ.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_ZZ.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_ZZ.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_RR.o: ntl-7.0.1/src/mat_RR.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_RR.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_RR.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_GF2E.o: ntl-7.0.1/src/mat_GF2E.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_GF2E.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_GF2E.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_GF2.o: ntl-7.0.1/src/mat_GF2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/mat_GF2.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/mat_GF2.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pXFactoring.o: ntl-7.0.1/src/lzz_pXFactoring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lzz_pXFactoring.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pXFactoring.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_XD.o: ntl-7.0.1/src/LLL_XD.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/LLL_XD.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_XD.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pX1.o: ntl-7.0.1/src/lzz_pX1.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lzz_pX1.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pX1.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pX.o: ntl-7.0.1/src/lzz_pX.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lzz_pX.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pX.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pEXFactoring.o: ntl-7.0.1/src/lzz_pEXFactoring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lzz_pEXFactoring.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pEXFactoring.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pEX.o: ntl-7.0.1/src/lzz_pEX.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lzz_pEX.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pEX.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pE.o: ntl-7.0.1/src/lzz_pE.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lzz_pE.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_pE.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_p.o: ntl-7.0.1/src/lzz_p.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lzz_p.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lzz_p.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/lip.o: ntl-7.0.1/src/lip.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/lip.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/lip.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/FacVec.o: ntl-7.0.1/src/FacVec.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/FacVec.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/FacVec.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/FFT.o: ntl-7.0.1/src/FFT.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/FFT.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/FFT.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2.o: ntl-7.0.1/src/GF2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GF2.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_QP.o: ntl-7.0.1/src/G_LLL_QP.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/G_LLL_QP.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_QP.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_RR.o: ntl-7.0.1/src/LLL_RR.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/LLL_RR.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_RR.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_QP.o: ntl-7.0.1/src/LLL_QP.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/LLL_QP.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_QP.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_FP.o: ntl-7.0.1/src/LLL_FP.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/LLL_FP.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL_FP.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL.o: ntl-7.0.1/src/LLL.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/LLL.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/LLL.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/HNF.o: ntl-7.0.1/src/HNF.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/HNF.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/HNF.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GetTime.o: ntl-7.0.1/src/GetTime.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GetTime.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GetTime.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_XD.o: ntl-7.0.1/src/G_LLL_XD.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/G_LLL_XD.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_XD.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_RR.o: ntl-7.0.1/src/G_LLL_RR.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/G_LLL_RR.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_RR.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_FP.o: ntl-7.0.1/src/G_LLL_FP.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/G_LLL_FP.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/G_LLL_FP.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2XVec.o: ntl-7.0.1/src/GF2XVec.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GF2XVec.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2XVec.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2XFactoring.o: ntl-7.0.1/src/GF2XFactoring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GF2XFactoring.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2XFactoring.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2X1.o: ntl-7.0.1/src/GF2X1.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GF2X1.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2X1.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2X.o: ntl-7.0.1/src/GF2X.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GF2X.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2X.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2EXFactoring.o: ntl-7.0.1/src/GF2EXFactoring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GF2EXFactoring.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2EXFactoring.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2EX.o: ntl-7.0.1/src/GF2EX.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GF2EX.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2EX.o

$(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2E.o: ntl-7.0.1/src/GF2E.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ntl-7.0.1/src/GF2E.cpp -o $(OBJDIR_RELEASE)/ntl-7.0.1/src/GF2E.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/cryptlib
	rm -rf $(OBJDIR_RELEASE)/ntl-7.0.1/src
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_release after_release clean_release

